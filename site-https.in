map \$http_upgrade \$connection_upgrade {
        default upgrade;
        '' close;
}

upstream websocket {
        server app:9000 ;
}

server {
        listen         80;
        server_name    $HOSTNAME;
        return         301 https://\$host\$request_uri;
}

server {
        listen 443;
        server_name $HOSTNAME;
        ssl on;
        ssl_certificate /etc/letsencrypt/live/$HOSTNAME/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/$HOSTNAME/privkey.pem;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4"; #Disables all weak ciphers
        ssl_prefer_server_ciphers on;

        location / {
                proxy_pass http://app:9000/;
                proxy_set_header X-Forwarded-For \$remote_addr;
        }

        location /socket.io {
            proxy_pass http://websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade \$http_upgrade;
            proxy_set_header Connection "upgrade"; #\$connection_upgrade;
        }
}
